import {glUtils} from './glUtils.js';
import { Box } from './Box.js';
import {Prism} from './Prism.js';
import {Rectangle} from './Rectangle.js';

window.onload = () => {
    main();
}

let utils;

function main(){
    let canvas = document.getElementById('myCanvas');
    utils = new glUtils(canvas);

    /** @type {WebGLRenderingContext} */
    let gl = utils.checkWebGl();

    let mainBodyVertices = [
        // Face A 
        -0.9, -0.5, -0.1875,      1.0, 1.0, 1.0,    0, 0, -1,    // Index:  0    
        -0.2, -0.5, -0.1875,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  1
        -0.2, -0.33, -0.1875,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  2
        -0.9,  -0.33, -0.1875,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  3
        // Face B   
        -0.9, -0.5,  0.1875,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  4
        -0.2, -0.5,  0.1875,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  5
        -0.2, -0.33,  0.1875,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  6
        -0.9,  -0.33,  0.1875,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  7
        // Face C    
        -0.9, -0.5, -0.1875,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  8
        -0.9, -0.33, -0.1875,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  9
        -0.9,  -0.33,  0.1875,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 10
        -0.9, -0.5,  0.1875,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 11
        // Face D 
        -0.2, -0.5, -0.1875,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 12
        -0.2, -0.33, -0.1875,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 13
        -0.2, -0.33,  0.1875,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 14
        -0.2, -0.5,  0.1875,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 15
        // Face E    
        -0.9, -0.5, -0.1875,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 16
        -0.9, -0.5,  0.1875,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 17
        -0.2, -0.5,  0.1875,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 18
        -0.2, -0.5, -0.1875,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 19
        // Face F 
        -0.9,  -0.33, -0.1875,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 20
        -0.9,  -0.33,  0.1875,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 21
        -0.2, -0.33,  0.1875,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 22
        -0.2, -0.33, -0.1875,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 23
    ];

    let mainCoverVertices = [
        // Face A
        -0.9, -0.33, -0.1875,      0.8, 0.8, 0.8,    0, 0, -1,    // Index:  0    
        -0.2, -0.33, -0.1875,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  1
        -0.2, -0.25, -0.1875,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  2
        -0.9,  -0.25, -0.1875,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  3
        // Face B  
        -0.9, -0.33,  0.1875,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  4
        -0.2, -0.33,  0.1875,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  5
        -0.2, -0.25,  0.1875,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  6
        -0.9,  -0.25,  0.1875,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  7
        // Face C   
        -0.9, -0.33, -0.1875,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  8
        -0.9, -0.25, -0.1875,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  9
        -0.9,  -0.25,  0.1875,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 10
        -0.9, -0.33,  0.1875,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 11
        // Face D
        -0.2, -0.33, -0.1875,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 12
        -0.2, -0.25, -0.1875,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 13
        -0.2, -0.25,  0.1875,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 14
        -0.2, -0.33,  0.1875,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 15
        // Face E   
        -0.9, -0.33, -0.1875,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 16
        -0.9, -0.33,  0.1875,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 17
        -0.2, -0.33,  0.1875,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 18
        -0.2, -0.33, -0.1875,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 19
        // Face F
        -0.9,  -0.25, -0.1875,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 20
        -0.9,  -0.25,  0.1875,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 21
        -0.2, -0.25,  0.1875,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 22
        -0.2, -0.25, -0.1875,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 23
    ];

    let smallLeftBoxBodyVertices = [
        // Face A
        -0.95, -0.5, -0.1375,      1.0, 1.0, 1.0,    0, 0, -1,    // Index:  0    
        -0.9, -0.5, -0.1375,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  1
        -0.9, -0.33, -0.1375,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  2
        -0.95,  -0.33, -0.1375,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  3
        // Face B  
        -0.95, -0.5,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  4
        -0.9, -0.5,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  5
        -0.9, -0.33,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  6
        -0.95,  -0.33,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  7
        // Face C   
        -0.95, -0.5, -0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  8
        -0.95, -0.33, -0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  9
        -0.95,  -0.33,  0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 10
        -0.95, -0.5,  0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 11
        // Face D
        -0.9, -0.5, -0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 12
        -0.9, -0.33, -0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 13
        -0.9, -0.33,  0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 14
        -0.9, -0.5,  0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 15
        // Face E 
        -0.95, -0.5, -0.1375,    1.0, 1.0, 1.0,  0, -1, 0,    // Index: 16
        -0.95, -0.5,  0.1375,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 17
        -0.9, -0.5,  0.1375,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 18
        -0.9, -0.5, -0.1375,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 19
        // Face F
        -0.95,  -0.33, -0.1375,     0, 1, 0,    0, 1, 0,    // Index: 20
        -0.95,  -0.33,  0.1375,     0, 1, 0,    0, 1, 0,    // Index: 21
        -0.9, -0.33,  0.1375,    0, 1, 0,    0, 1, 0,    // Index: 22
        -0.9, -0.33, -0.1375,    0, 1, 0,    0, 1, 0,    // Index: 23
    ];

    let smallLeftBoxCoverVertices = [
        // Face A
        -0.95, -0.33, -0.1375,      0.8, 0.8, 0.8,    0, 0, -1,    // Index:  0    
        -0.9, -0.33, -0.1375,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  1
        -0.9, -0.25, -0.1375,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  2
        -0.95,  -0.25, -0.1375,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  3
        // Face B  
        -0.95, -0.33,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  4
        -0.9, -0.33,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  5
        -0.9, -0.25,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  6
        -0.95,  -0.25,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  7
        // Face C   
        -0.95, -0.33, -0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  8
        -0.95, -0.25, -0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  9
        -0.95,  -0.25,  0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 10
        -0.95, -0.33,  0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 11
        // Face D
        -0.9, -0.33, -0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 12
        -0.9, -0.25, -0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 13
        -0.9, -0.25,  0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 14
        -0.9, -0.33,  0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 15
        // Face E 
        -0.95, -0.33, -0.1375,    0.8, 0.8, 0.8,  0, -1, 0,    // Index: 16
        -0.95, -0.33,  0.1375,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 17
        -0.9, -0.33,  0.1375,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 18
        -0.9, -0.33, -0.1375,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 19
        // Face F
        -0.95,  -0.25, -0.1375,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 20
        -0.95,  -0.25,  0.1375,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 21
        -0.9, -0.25,  0.1375,    0.8, 0.8, 0.8,    0, 1, 0,    // Index: 22
        -0.9, -0.25, -0.1375,    0.8, 0.8, 0.8,    0, 1, 0,    // Index: 23
    ];

    let smallRightBoxBodyVertices = [
        // Face A 
        -0.2, -0.5, -0.1375,      1.0, 1.0, 1.0,    0, 0, -1,    // Index:  0    
        -0.15, -0.5, -0.1375,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  1
        -0.15, -0.33, -0.1375,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  2
        -0.2,  -0.33, -0.1375,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  3
        // Face B  
        -0.2, -0.5,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  4
        -0.15, -0.5,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  5
        -0.15, -0.33,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  6
        -0.2,  -0.33,  0.1375,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  7
        // Face C    
        -0.2, -0.5, -0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  8
        -0.2, -0.33, -0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  9
        -0.2,  -0.33,  0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 10
        -0.2, -0.5,  0.1375,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 11
        // Face D 
        -0.15, -0.5, -0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 12
        -0.15, -0.33, -0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 13
        -0.15, -0.33,  0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 14
        -0.15, -0.5,  0.1375,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 15
        // Face E    
        -0.2, -0.5, -0.1375,    1.0, 1.0, 1.0,  0, -1, 0,    // Index: 16
        -0.2, -0.5,  0.1375,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 17
        -0.15, -0.5,  0.1375,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 18
        -0.15, -0.5, -0.1375,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 19
        // Face F 
        -0.2,  -0.33, -0.1375,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 20
        -0.2,  -0.33,  0.1375,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 21
        -0.15, -0.33,  0.1375,    1.0, 1.0, 1.0,    0, 1, 0,    // Index: 22
        -0.15, -0.33, -0.1375,    1.0, 1.0, 1.0,    0, 1, 0,    // Index: 23
    ];

    let smallRightBoxCoverVertices = [
        // Face A 
        -0.2, -0.33, -0.1375,      0.8, 0.8, 0.8,    0, 0, -1,    // Index:  0    
        -0.15, -0.33, -0.1375,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  1
        -0.15, -0.25, -0.1375,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  2
        -0.2,  -0.25, -0.1375,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  3
        // Face B  
        -0.2, -0.33,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  4
        -0.15, -0.33,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  5
        -0.15, -0.25,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  6
        -0.2,  -0.25,  0.1375,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  7
        // Face C    
        -0.2, -0.33, -0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  8
        -0.2, -0.25, -0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  9
        -0.2,  -0.25,  0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 10
        -0.2, -0.33,  0.1375,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 11
        // Face D 
        -0.15, -0.33, -0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 12
        -0.15, -0.25, -0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 13
        -0.15, -0.25,  0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 14
        -0.15, -0.33,  0.1375,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 15
        // Face E    
        -0.2, -0.33, -0.1375,    0.8, 0.8, 0.8,  0, -1, 0,    // Index: 16
        -0.2, -0.33,  0.1375,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 17
        -0.15, -0.33,  0.1375,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 18
        -0.15, -0.33, -0.1375,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 19
        // Face F 
        -0.2,  -0.25, -0.1375,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 20
        -0.2,  -0.25,  0.1375,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 21
        -0.15, -0.25,  0.1375,    0.8, 0.8, 0.8,    0, 1, 0,    // Index: 22
        -0.15, -0.25, -0.1375,    0.8, 0.8, 0.8,    0, 1, 0,    // Index: 23
    ];

    


    let mainBodyVertices2 = [
        // Face A 
        0.3625, -0.5, -0.35,      1.0, 1.0, 1.0,    0, 0, -1,    // Index:  0    
        0.7375, -0.5, -0.35,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  1
        0.7375, -0.33, -0.35,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  2
        0.3625,  -0.33, -0.35,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  3
        // Face B   
        0.3625, -0.5,  0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  4
        0.7375, -0.5,  0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  5
        0.7375, -0.33,  0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  6
        0.3625,  -0.33,  0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  7
        // Face C    
        0.3625, -0.5, -0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  8
        0.3625, -0.33, -0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  9
        0.3625,  -0.33,  0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 10
        0.3625, -0.5,  0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 11
        // Face D 
        0.7375, -0.5, -0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 12
        0.7375, -0.33, -0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 13
        0.7375, -0.33,  0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 14
        0.7375, -0.5,  0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 15
        // Face E    
        0.3625, -0.5, -0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 16
        0.3625, -0.5,  0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 17
        0.7375, -0.5,  0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 18
        0.7375, -0.5, -0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 19
        // Face F 
        0.3625,  -0.33, -0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 20
        0.3625,  -0.33,  0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 21
        0.7375, -0.33,  0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 22
        0.7375, -0.33, -0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 23
    ];

    let mainCoverVertices2 = [
        // Face A 
        0.3625, -0.33, -0.35,      0.8, 0.8, 0.8,    0, 0, -1,    // Index:  0    
        0.7375, -0.33, -0.35,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  1
        0.7375, -0.25, -0.35,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  2
        0.3625,  -0.25, -0.35,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  3
        // Face B   
        0.3625, -0.33,  0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  4
        0.7375, -0.33,  0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  5
        0.7375, -0.25,  0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  6
        0.3625,  -0.25,  0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  7
        // Face C    
        0.3625, -0.33, -0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  8
        0.3625, -0.25, -0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  9
        0.3625,  -0.25,  0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 10
        0.3625, -0.33,  0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 11
        // Face D 
        0.7375, -0.33, -0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 12
        0.7375, -0.25, -0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 13
        0.7375, -0.25,  0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 14
        0.7375, -0.33,  0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 15
        // Face E    
        0.3625, -0.33, -0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 16
        0.3625, -0.33,  0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 17
        0.7375, -0.33,  0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 18
        0.7375, -0.33, -0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 19
        // Face F 
        0.3625,  -0.25, -0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 20
        0.3625,  -0.25,  0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 21
        0.7375, -0.25,  0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 22
        0.7375, -0.25, -0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 23
    ];

    let smallLeftBoxBodyVertices2 = [
        // Face A 
        0.4125, -0.5, -0.40,      1.0, 1.0, 1.0,    0, 0, -1,    // Index:  0    
        0.6875, -0.5, -0.40,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  1
        0.6875, -0.33, -0.40,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  2
        0.4125,  -0.33, -0.40,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  3
        // Face B   
        0.4125, -0.5,  -0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  4
        0.6875, -0.5,  -0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  5
        0.6875, -0.33,  -0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  6
        0.4125,  -0.33,  -0.35,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  7
        // Face C    
        0.4125, -0.5, -0.40,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  8
        0.4125, -0.33, -0.40,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  9
        0.4125,  -0.33,  -0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 10
        0.4125, -0.5,  -0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 11
        // Face D 
        0.6875, -0.5, -0.40,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 12
        0.6875, -0.33, -0.40,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 13
        0.6875, -0.33,  -0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 14
        0.6875, -0.5,  -0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 15
        // Face E    
        0.4125, -0.5, -0.40,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 16
        0.4125, -0.5,  -0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 17
        0.6875, -0.5,  -0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 18
        0.6875, -0.5, -0.40,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 19
        // Face F 
        0.4125,  -0.33, -0.40,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 20
        0.4125,  -0.33,  -0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 21
        0.6875, -0.33,  -0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 22
        0.6875, -0.33, -0.40,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 23
    ];

    let smallLeftBoxCoverVertices2 = [
        // Face A 
        0.4125, -0.33, -0.40,      0.8, 0.8, 0.8,    0, 0, -1,    // Index:  0    
        0.6875, -0.33, -0.40,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  1
        0.6875, -0.25, -0.40,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  2
        0.4125,  -0.25, -0.40,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  3
        // Face B   
        0.4125, -0.33,  -0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  4
        0.6875, -0.33,  -0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  5
        0.6875, -0.25,  -0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  6
        0.4125,  -0.25,  -0.35,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  7
        // Face C    
        0.4125, -0.33, -0.40,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  8
        0.4125, -0.25, -0.40,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  9
        0.4125,  -0.25,  -0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 10
        0.4125, -0.33,  -0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 11
        // Face D 
        0.6875, -0.33, -0.40,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 12
        0.6875, -0.25, -0.40,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 13
        0.6875, -0.25,  -0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 14
        0.6875, -0.33,  -0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 15
        // Face E    
        0.4125, -0.33, -0.40,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 16
        0.4125, -0.33,  -0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 17
        0.6875, -0.33,  -0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 18
        0.6875, -0.33, -0.40,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 19
        // Face F 
        0.4125,  -0.25, -0.40,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 20
        0.4125,  -0.25,  -0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 21
        0.6875, -0.25,  -0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 22
        0.6875, -0.25, -0.40,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 23
    ];

    let smallRightBoxBodyVertices2 = [
        // Face A 
        0.4125, -0.5, 0.35,      1.0, 1.0, 1.0,    0, 0, -1,    // Index:  0    
        0.6875, -0.5, 0.35,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  1
        0.6875, -0.33, 0.35,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  2
        0.4125,  -0.33, 0.35,     1.0, 1.0, 1.0,    0, 0, -1,    // Index:  3
        // Face B   
        0.4125, -0.5,  0.40,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  4
        0.6875, -0.5,  0.40,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  5
        0.6875, -0.33,  0.40,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  6
        0.4125,  -0.33,  0.40,     1.0, 1.0, 1.0,    0, 0, 1,    // Index:  7
        // Face C    
        0.4125, -0.5, 0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  8
        0.4125, -0.33, 0.35,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index:  9
        0.4125,  -0.33,  0.40,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 10
        0.4125, -0.5,  0.40,     1.0, 1.0, 1.0,    -1, 0, 0,    // Index: 11
        // Face D 
        0.6875, -0.5, 0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 12
        0.6875, -0.33, 0.35,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 13
        0.6875, -0.33,  0.40,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 14
        0.6875, -0.5,  0.40,     1.0, 1.0, 1.0,    1, 0, 0,    // Index: 15
        // Face E    
        0.4125, -0.5, 0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 16
        0.4125, -0.5,  0.40,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 17
        0.6875, -0.5,  0.40,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 18
        0.6875, -0.5, 0.35,     1.0, 1.0, 1.0,  0, -1, 0,    // Index: 19
        // Face F 
        0.4125,  -0.33, 0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 20
        0.4125,  -0.33,  0.40,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 21
        0.6875, -0.33,  0.40,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 22
        0.6875, -0.33, 0.35,     1.0, 1.0, 1.0,    0, 1, 0,    // Index: 23
    ];

    let smallRightBoxCoverVertices2 = [
        // Face A 
        0.4125, -0.33, 0.35,      0.8, 0.8, 0.8,    0, 0, -1,    // Index:  0    
        0.6875, -0.33, 0.35,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  1
        0.6875, -0.25, 0.35,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  2
        0.4125,  -0.25, 0.35,     0.8, 0.8, 0.8,    0, 0, -1,    // Index:  3
        // Face B   
        0.4125, -0.33,  0.40,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  4
        0.6875, -0.33,  0.40,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  5
        0.6875, -0.25,  0.40,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  6
        0.4125,  -0.25,  0.40,     0.8, 0.8, 0.8,    0, 0, 1,    // Index:  7
        // Face C    
        0.4125, -0.33, 0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  8
        0.4125, -0.25, 0.35,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index:  9
        0.4125,  -0.25,  0.40,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 10
        0.4125, -0.33,  0.40,     0.8, 0.8, 0.8,    -1, 0, 0,    // Index: 11
        // Face D 
        0.6875, -0.33, 0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 12
        0.6875, -0.25, 0.35,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 13
        0.6875, -0.25,  0.40,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 14
        0.6875, -0.33,  0.40,     0.8, 0.8, 0.8,    1, 0, 0,    // Index: 15
        // Face E    
        0.4125, -0.33, 0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 16
        0.4125, -0.33,  0.40,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 17
        0.6875, -0.33,  0.40,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 18
        0.6875, -0.33, 0.35,     0.8, 0.8, 0.8,  0, -1, 0,    // Index: 19
        // Face F 
        0.4125,  -0.25, 0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 20
        0.4125,  -0.25,  0.40,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 21
        0.6875, -0.25,  0.40,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 22
        0.6875, -0.25, 0.35,     0.8, 0.8, 0.8,    0, 1, 0,    // Index: 23
    ];


    let cube_vertices = [
        // Face A  
        -0.07, -0.07, -0.07,     1, 1, 1,    0, 0, 1,    // Index:  0    
         0.07, -0.07, -0.07,     1, 1, 1,    0, 0, 1,    // Index:  1
         0.07,  0.07, -0.07,     1, 1, 1,    0, 0, 1,    // Index:  2
        -0.07,  0.07, -0.07,     1, 1, 1,    0, 0, 1,    // Index:  3
        // Face B        
        -0.07, -0.07,  0.07,     1, 1, 1,    0, 0, -1,    // Index:  4
         0.07, -0.07,  0.07,     1, 1, 1,    0, 0, -1,    // Index:  5
         0.07,  0.07,  0.07,     1, 1, 1,    0, 0, -1,    // Index:  6
        -0.07,  0.07,  0.07,     1, 1, 1,    0, 0, -1,    // Index:  7
        // Face C         
        -0.07, -0.07, -0.07,     1, 1, 1,    1, 0, 0,    // Index:  8
        -0.07,  0.07, -0.07,     1, 1, 1,    1, 0, 0,    // Index:  9
        -0.07,  0.07,  0.07,     1, 1, 1,    1, 0, 0,    // Index: 10
        -0.07, -0.07,  0.07,     1, 1, 1,    1, 0, 0,    // Index: 11
        // Face D  
         0.07, -0.07, -0.07,     1, 1, 1,    -1, 0, 0,    // Index: 12
         0.07,  0.07, -0.07,     1, 1, 1,    -1, 0, 0,    // Index: 13
         0.07,  0.07,  0.07,     1, 1, 1,    -1, 0, 0,    // Index: 14
         0.07, -0.07,  0.07,     1, 1, 1,    -1, 0, 0,    // Index: 15
        // Face E      
        -0.07, -0.07, -0.07,     1, 1, 1,  0, 1, 0,    // Index: 16
        -0.07, -0.07,  0.07,     1, 1, 1,  0, 1, 0,    // Index: 17
         0.07, -0.07,  0.07,     1, 1, 1,  0, 1, 0,    // Index: 18
         0.07, -0.07, -0.07,     1, 1, 1,  0, 1, 0,    // Index: 19
        // Face F
        -0.07,  0.07, -0.07,     1, 1, 1,    0, -1, 0,    // Index: 20
        -0.07,  0.07,  0.07,     1, 1, 1,    0, -1, 0,    // Index: 21
         0.07,  0.07,  0.07,     1, 1, 1,    0, -1, 0,    // Index: 22
         0.07,  0.07, -0.07,     1, 1, 1,    0, -1, 0,    // Index: 23
    ];

    //Rounded box with each side consist of 2 prism; each object consist of 2 part (main body & cover); there are 16 prism for each object
    let prismVertices = [
        //Face A
        -0.2, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.15, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.15, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.2, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,

        //Face B
        -0.2, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.17, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.17, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.2, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        
        //Face C
        -0.2, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.15, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.17, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.2, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.15, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.17, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.15, -0.5, -0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.17, -0.5, -0.1775, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.17, -0.33, -0.1775, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.15, -0.33, -0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
    ];

    let prismVertices2 = [
        //Face A
        -0.2, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.17, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.17, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.2, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,

        //Face B
        -0.2, -0.5, -0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.5, -0.1875, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.33, -0.1875, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.33, -0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        -0.2, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.17, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.2, -0.33, -0.1875, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.2, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.17, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.2, -0.5, -0.1875, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.17, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.20, -0.5, -0.1875, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.20, -0.33, -0.1875, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.17, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
    ];

    let prismVertices3 = [
        //Face A
        -0.9, -0.5, -0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.9, -0.5, -0.1875, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.9, -0.33, -0.1875, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.9, -0.33, -0.1375, 1.0, 1.0, 1.0, 1, 0, 0,

        //Face B
        -0.9, -0.5, -0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.93, -0.5, -0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.93, -0.33, -0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.9, -0.33, -0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        -0.9, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.9, -0.33, -0.1875, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.93, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.9, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.9, -0.5, -0.1875, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.93, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.9, -0.5, -0.1875, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.93, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.93, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.9, -0.33, -0.1875, 1.0, 1.0, 1.0, 0, 0, -1,
    ];

    let prismVertices4 = [
        //Face A
        -0.9, -0.5, -0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.93, -0.5, -0.1775, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.93, -0.33, -0.1775, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.9, -0.33, -0.1375, 1.0, 1.0, 1.0, 1, 0, 0,

        //Face B
        -0.9, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.95, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.95, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.9, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        
        //Face C
        -0.9, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.93, -0.33, -0.1775, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.95, -0.33, -0.1375, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.9, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.93, -0.5, -0.1775, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.95, -0.5, -0.1375, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.93, -0.5, -0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.95, -0.5, -0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.95, -0.33, -0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.93, -0.33, -0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
    ];


    let prismVertices5 = [
        //Face A
        -0.9, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.95, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.95, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.9, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,

        //Face B
        -0.9, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.93, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.93, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.9, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 0, 1,
        
        //Face C
        -0.9, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.95, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.93, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.9, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.95, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.93, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.95, -0.5, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.93, -0.5, 0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.93, -0.33, 0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.95, -0.33, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
    ];

    let prismVertices6 = [
        //Face A
        -0.9, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.93, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.93, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.9, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,

        //Face B
        -0.9, -0.5, 0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.9, -0.5, 0.1875, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.9, -0.33, 0.1875, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.9, -0.33, 0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
        
        //Face C
        -0.9, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.93, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.9, -0.33, 0.1875, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.9, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.93, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.9, -0.5, 0.1875, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.93, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.9, -0.5, 0.1875, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.9, -0.33, 0.1875, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.93, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
    ];

    let prismVertices7 = [
        //Face A
        -0.2, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.15, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.15, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,
        -0.2, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 0, -1,

        //Face B
        -0.2, -0.5, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.17, -0.5, 0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.17, -0.33, 0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.33, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        -0.2, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.15, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.17, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.2, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.15, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.17, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.15, -0.5, 0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.17, -0.5, 0.1775, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.17, -0.33, 0.1775, 1.0, 1.0, 1.0, 1, 0, 0,
        -0.15, -0.33, 0.1375, 1.0, 1.0, 1.0, 1, 0, 0,
    ];

    let prismVertices8 = [
        //Face A
        -0.2, -0.5, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.17, -0.5, 0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.17, -0.33, 0.1775, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.33, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,

        //Face B
        -0.2, -0.5, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.5, 0.1875, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.33, 0.1875, 1.0, 1.0, 1.0, -1, 0, 0,
        -0.2, -0.33, 0.1375, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        -0.2, -0.33, 0.1375, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.17, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 1, 0,
        -0.2, -0.33, 0.1875, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        -0.2, -0.5, 0.1375, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.17, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, -1, 0,
        -0.2, -0.5, 0.1875, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        -0.17, -0.5, 0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.2, -0.5, 0.1875, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.2, -0.33, 0.1875, 1.0, 1.0, 1.0, 0, 0, 1,
        -0.17, -0.33, 0.1775, 1.0, 1.0, 1.0, 0, 0, 1,
    ];

    let prismVertices9 = [
        //Face A
        -0.2, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.15, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.15, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.2, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,

        //Face B
        -0.2, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.17, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.17, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.2, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        
        //Face C
        -0.2, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.15, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.17, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.2, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.15, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.17, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.15, -0.33, -0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.17, -0.33, -0.1775, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.17, -0.25, -0.1775, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.15, -0.25, -0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
    ];

    let prismVertices10 = [
        //Face A
        -0.2, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.17, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.17, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.2, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,

        //Face B
        -0.2, -0.33, -0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.33, -0.1875, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.25, -0.1875, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.25, -0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        -0.2, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.17, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.2, -0.25, -0.1875, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.2, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.17, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.2, -0.33, -0.1875, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.17, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.20, -0.33, -0.1875, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.20, -0.25, -0.1875, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.17, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
    ];

    let prismVertices11 = [
        //Face A
        -0.9, -0.33, -0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.9, -0.33, -0.1875, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.9, -0.25, -0.1875, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.9, -0.25, -0.1375, 0.8, 0.8, 0.8, 1, 0, 0,

        //Face B
        -0.9, -0.33, -0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.93, -0.33, -0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.93, -0.25, -0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.9, -0.25, -0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        -0.9, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.9, -0.25, -0.1875, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.93, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.9, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.9, -0.33, -0.1875, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.93, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.9, -0.33, -0.1875, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.93, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.93, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.9, -0.25, -0.1875, 0.8, 0.8, 0.8, 0, 0, -1,
    ];

    let prismVertices12 = [
        //Face A
        -0.9, -0.33, -0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.93, -0.33, -0.1775, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.93, -0.25, -0.1775, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.9, -0.25, -0.1375, 0.8, 0.8, 0.8, 1, 0, 0,

        //Face B
        -0.9, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.95, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.95, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.9, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        
        //Face C
        -0.9, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.93, -0.25, -0.1775, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.95, -0.25, -0.1375, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.9, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.93, -0.33, -0.1775, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.95, -0.33, -0.1375, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.93, -0.33, -0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.95, -0.33, -0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.95, -0.25, -0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.93, -0.25, -0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
    ];


    let prismVertices13 = [
        //Face A
        -0.9, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.95, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.95, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.9, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,

        //Face B
        -0.9, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.93, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.93, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.9, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 0, 1,
        
        //Face C
        -0.9, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.95, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.93, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.9, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.95, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.93, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.95, -0.33, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.93, -0.33, 0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.93, -0.25, 0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.95, -0.25, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
    ];

    let prismVertices14 = [
        //Face A
        -0.9, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.93, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.93, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.9, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,

        //Face B
        -0.9, -0.33, 0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.9, -0.33, 0.1875, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.9, -0.25, 0.1875, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.9, -0.25, 0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
        
        //Face C
        -0.9, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.93, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.9, -0.25, 0.1875, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.9, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.93, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.9, -0.33, 0.1875, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.93, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.9, -0.33, 0.1875, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.9, -0.25, 0.1875, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.93, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
    ];

    let prismVertices15 = [
        //Face A
        -0.2, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.15, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.15, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,
        -0.2, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 0, -1,

        //Face B
        -0.2, -0.33, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.17, -0.33, 0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.17, -0.25, 0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.25, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        -0.2, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.15, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.17, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.2, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.15, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.17, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.15, -0.33, 0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.17, -0.33, 0.1775, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.17, -0.25, 0.1775, 0.8, 0.8, 0.8, 1, 0, 0,
        -0.15, -0.25, 0.1375, 0.8, 0.8, 0.8, 1, 0, 0,
    ];

    let prismVertices16 = [
        //Face A
        -0.2, -0.33, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.17, -0.33, 0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.17, -0.25, 0.1775, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.25, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,

        //Face B
        -0.2, -0.33, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.33, 0.1875, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.25, 0.1875, 0.8, 0.8, 0.8, -1, 0, 0,
        -0.2, -0.25, 0.1375, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        -0.2, -0.25, 0.1375, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.17, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 1, 0,
        -0.2, -0.25, 0.1875, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        -0.2, -0.33, 0.1375, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.17, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, -1, 0,
        -0.2, -0.33, 0.1875, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        -0.17, -0.33, 0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.2, -0.33, 0.1875, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.2, -0.25, 0.1875, 0.8, 0.8, 0.8, 0, 0, 1,
        -0.17, -0.25, 0.1775, 0.8, 0.8, 0.8, 0, 0, 1,
    ];

    let prismVertices17 = [
        //Face A
        0.6875, -0.5, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.7375, -0.5, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.7375, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.6875, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,

        //Face B
        0.6875, -0.5, -0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.7175, -0.5, -0.39, 1.0, 1.0, 1.0, 0, 0, -1,
        0.7175, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 0, -1,
        0.6875, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        
        //Face C
        0.6875, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.7375, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.7175, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.6875, -0.5, -0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.7375, -0.5, -0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.7175, -0.5, -0.39, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.7375, -0.5, -0.35, 1.0, 1.0, 1.0, 1, 0, 0,
        0.7175, -0.5, -0.39, 1.0, 1.0, 1.0, 1, 0, 0,
        0.7175, -0.33, -0.39, 1.0, 1.0, 1.0, 1, 0, 0,
        0.7375, -0.33, -0.35, 1.0, 1.0, 1.0, 1, 0, 0,
    ];

    let prismVertices18 = [
        //Face A
        0.6875, -0.5, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.7175, -0.5, -0.39, 1.0, 1.0, 1.0, 0, 0, 1,
        0.7175, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 0, 1,
        0.6875, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,

        //Face B
        0.6875, -0.5, -0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.5, -0.40, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.33, -0.40, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.33, -0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        0.6875, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.7175, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 1, 0,
        0.6875, -0.33, -0.40, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.6875, -0.5, -0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.7175, -0.5, -0.39, 1.0, 1.0, 1.0, 0, -1, 0,
        0.6875, -0.5, -0.40, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.7175, -0.5, -0.39, 1.0, 1.0, 1.0, 0, 0, -1,
        0.6875, -0.5, -0.40, 1.0, 1.0, 1.0, 0, 0, -1,
        0.6875, -0.33, -0.40, 1.0, 1.0, 1.0, 0, 0, -1,
        0.7175, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 0, -1,
    ];

    let prismVertices19 = [
        //Face A
        0.4125, -0.5, -0.35, 1.0, 1.0, 1.0, 1, 0, 0,
        0.4125, -0.5, -0.40, 1.0, 1.0, 1.0, 1, 0, 0,
        0.4125, -0.33, -0.40, 1.0, 1.0, 1.0, 1, 0, 0,
        0.4125, -0.33, -0.35, 1.0, 1.0, 1.0, 1, 0, 0,

        //Face B
        0.4125, -0.5, -0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3825, -0.5, -0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3825, -0.33, -0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.4125, -0.33, -0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        0.4125, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.4125, -0.33, -0.40, 1.0, 1.0, 1.0, 0, 1, 0,
        0.3825, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.4125, -0.5, -0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.4125, -0.5, -0.40, 1.0, 1.0, 1.0, 0, -1, 0,
        0.3825, -0.5, -0.39, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.4125, -0.5, -0.40, 1.0, 1.0, 1.0, 0, 0, -1,
        0.3825, -0.5, -0.39, 1.0, 1.0, 1.0, 0, 0, -1,
        0.3825, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 0, -1,
        0.4125, -0.33, -0.40, 1.0, 1.0, 1.0, 0, 0, -1,
    ];

    let prismVertices20 = [
        //Face A
        0.4125, -0.5, -0.35, 1.0, 1.0, 1.0, 1, 0, 0,
        0.3825, -0.5, -0.39, 1.0, 1.0, 1.0, 1, 0, 0,
        0.3825, -0.33, -0.39, 1.0, 1.0, 1.0, 1, 0, 0,
        0.4125, -0.33, -0.35, 1.0, 1.0, 1.0, 1, 0, 0,

        //Face B
        0.4125, -0.5, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.3625, -0.5, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.3625, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.4125, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        
        //Face C
        0.4125, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.3825, -0.33, -0.39, 1.0, 1.0, 1.0, 0, 1, 0,
        0.3625, -0.33, -0.35, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.4125, -0.5, -0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.3825, -0.5, -0.39, 1.0, 1.0, 1.0, 0, -1, 0,
        0.3625, -0.5, -0.35, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.3825, -0.5, -0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3625, -0.5, -0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3625, -0.33, -0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3825, -0.33, -0.39, 1.0, 1.0, 1.0, -1, 0, 0,
    ];


    let prismVertices21 = [
        //Face A
        0.4125, -0.5, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.3625, -0.5, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.3625, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.4125, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,

        //Face B
        0.4125, -0.5, 0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        0.3825, -0.5, 0.39, 1.0, 1.0, 1.0, 0, 0, 1,
        0.3825, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 0, 1,
        0.4125, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 0, 1,
        
        //Face C
        0.4125, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.3625, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.3825, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.4125, -0.5, 0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.3625, -0.5, 0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.3825, -0.5, 0.39, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.3625, -0.5, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3825, -0.5, 0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3825, -0.33, 0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.3625, -0.33, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,
    ];

    let prismVertices22 = [
        //Face A
        0.4125, -0.5, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.3825, -0.5, 0.39, 1.0, 1.0, 1.0, 0, 0, -1,
        0.3825, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 0, -1,
        0.4125, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,

        //Face B
        0.4125, -0.5, 0.35, 1.0, 1.0, 1.0, 1, 0, 0,
        0.4125, -0.5, 0.40, 1.0, 1.0, 1.0, 1, 0, 0,
        0.4125, -0.33, 0.40, 1.0, 1.0, 1.0, 1, 0, 0,
        0.4125, -0.33, 0.35, 1.0, 1.0, 1.0, 1, 0, 0,
        
        //Face C
        0.4125, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.3825, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 1, 0,
        0.4125, -0.33, 0.40, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.4125, -0.5, 0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.3825, -0.5, 0.39, 1.0, 1.0, 1.0, 0, -1, 0,
        0.4125, -0.5, 0.40, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.3825, -0.5, 0.39, 1.0, 1.0, 1.0, 0, 0, 1,
        0.4125, -0.5, 0.40, 1.0, 1.0, 1.0, 0, 0, 1,
        0.4125, -0.33, 0.40, 1.0, 1.0, 1.0, 0, 0, 1,
        0.3825, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 0, 1,
    ];

    let prismVertices23 = [
        //Face A
        0.6875, -0.5, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.7375, -0.5, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.7375, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,
        0.6875, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 0, -1,

        //Face B
        0.6875, -0.5, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.7175, -0.5, 0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.7175, -0.33, 0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.33, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        0.6875, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.7375, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.7175, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.6875, -0.5, 0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.7375, -0.5, 0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.7175, -0.5, 0.39, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.7375, -0.5, 0.35, 1.0, 1.0, 1.0, 1, 0, 0,
        0.7175, -0.5, 0.39, 1.0, 1.0, 1.0, 1, 0, 0,
        0.7175, -0.33, 0.39, 1.0, 1.0, 1.0, 1, 0, 0,
        0.7375, -0.33, 0.35, 1.0, 1.0, 1.0, 1, 0, 0,
    ];

    let prismVertices24 = [
        //Face A
        0.6875, -0.5, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.7175, -0.5, 0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.7175, -0.33, 0.39, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.33, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,

        //Face B
        0.6875, -0.5, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.5, 0.40, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.33, 0.40, 1.0, 1.0, 1.0, -1, 0, 0,
        0.6875, -0.33, 0.35, 1.0, 1.0, 1.0, -1, 0, 0,
        
        //Face C
        0.6875, -0.33, 0.35, 1.0, 1.0, 1.0, 0, 1, 0,
        0.7175, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 1, 0,
        0.6875, -0.33, 0.40, 1.0, 1.0, 1.0, 0, 1, 0,

        //Face D
        0.6875, -0.5, 0.35, 1.0, 1.0, 1.0, 0, -1, 0,
        0.7175, -0.5, 0.39, 1.0, 1.0, 1.0, 0, -1, 0,
        0.6875, -0.5, 0.40, 1.0, 1.0, 1.0, 0, -1, 0,

        //Face E
        0.7175, -0.5, 0.39, 1.0, 1.0, 1.0, 0, 0, 1,
        0.6875, -0.5, 0.40, 1.0, 1.0, 1.0, 0, 0, 1,
        0.6875, -0.33, 0.40, 1.0, 1.0, 1.0, 0, 0, 1,
        0.7175, -0.33, 0.39, 1.0, 1.0, 1.0, 0, 0, 1,
    ];

    let prismVertices25 = [
        //Face A
        0.6875, -0.33, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.7375, -0.33, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.7375, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.6875, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,

        //Face B
        0.6875, -0.33, -0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.7175, -0.33, -0.39, 0.8, 0.8, 0.8, 0, 0, -1,
        0.7175, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 0, -1,
        0.6875, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        
        //Face C
        0.6875, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.7375, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.7175, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.6875, -0.33, -0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.7375, -0.33, -0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.7175, -0.33, -0.39, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.7375, -0.33, -0.35, 0.8, 0.8, 0.8, 1, 0, 0,
        0.7175, -0.33, -0.39, 0.8, 0.8, 0.8, 1, 0, 0,
        0.7175, -0.25, -0.39, 0.8, 0.8, 0.8, 1, 0, 0,
        0.7375, -0.25, -0.35, 0.8, 0.8, 0.8, 1, 0, 0,
    ];

    let prismVertices26 = [
        //Face A
        0.6875, -0.33, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.7175, -0.33, -0.39, 0.8, 0.8, 0.8, 0, 0, 1,
        0.7175, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 0, 1,
        0.6875, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,

        //Face B
        0.6875, -0.33, -0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.33, -0.40, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.25, -0.40, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.25, -0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        0.6875, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.7175, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 1, 0,
        0.6875, -0.25, -0.40, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.6875, -0.33, -0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.7175, -0.33, -0.39, 0.8, 0.8, 0.8, 0, -1, 0,
        0.6875, -0.33, -0.40, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.7175, -0.33, -0.39, 0.8, 0.8, 0.8, 0, 0, -1,
        0.6875, -0.33, -0.40, 0.8, 0.8, 0.8, 0, 0, -1,
        0.6875, -0.25, -0.40, 0.8, 0.8, 0.8, 0, 0, -1,
        0.7175, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 0, -1,
    ];

    let prismVertices27 = [
        //Face A
        0.4125, -0.33, -0.35, 0.8, 0.8, 0.8, 1, 0, 0,
        0.4125, -0.33, -0.40, 0.8, 0.8, 0.8, 1, 0, 0,
        0.4125, -0.25, -0.40, 0.8, 0.8, 0.8, 1, 0, 0,
        0.4125, -0.25, -0.35, 0.8, 0.8, 0.8, 1, 0, 0,

        //Face B
        0.4125, -0.33, -0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3825, -0.33, -0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3825, -0.25, -0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.4125, -0.25, -0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        0.4125, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.4125, -0.25, -0.40, 0.8, 0.8, 0.8, 0, 1, 0,
        0.3825, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.4125, -0.33, -0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.4125, -0.33, -0.40, 0.8, 0.8, 0.8, 0, -1, 0,
        0.3825, -0.33, -0.39, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.4125, -0.33, -0.40, 0.8, 0.8, 0.8, 0, 0, -1,
        0.3825, -0.33, -0.39, 0.8, 0.8, 0.8, 0, 0, -1,
        0.3825, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 0, -1,
        0.4125, -0.25, -0.40, 0.8, 0.8, 0.8, 0, 0, -1,
    ];

    let prismVertices28 = [
        //Face A
        0.4125, -0.33, -0.35, 0.8, 0.8, 0.8, 1, 0, 0,
        0.3825, -0.33, -0.39, 0.8, 0.8, 0.8, 1, 0, 0,
        0.3825, -0.25, -0.39, 0.8, 0.8, 0.8, 1, 0, 0,
        0.4125, -0.25, -0.35, 0.8, 0.8, 0.8, 1, 0, 0,

        //Face B
        0.4125, -0.33, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.3625, -0.33, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.3625, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.4125, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        
        //Face C
        0.4125, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.3825, -0.25, -0.39, 0.8, 0.8, 0.8, 0, 1, 0,
        0.3625, -0.25, -0.35, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.4125, -0.33, -0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.3825, -0.33, -0.39, 0.8, 0.8, 0.8, 0, -1, 0,
        0.3625, -0.33, -0.35, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.3825, -0.33, -0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3625, -0.33, -0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3625, -0.25, -0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3825, -0.25, -0.39, 0.8, 0.8, 0.8, -1, 0, 0,
    ];


    let prismVertices29 = [
        //Face A
        0.4125, -0.33, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.3625, -0.33, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.3625, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.4125, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,

        //Face B
        0.4125, -0.33, 0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        0.3825, -0.33, 0.39, 0.8, 0.8, 0.8, 0, 0, 1,
        0.3825, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 0, 1,
        0.4125, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 0, 1,
        
        //Face C
        0.4125, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.3625, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.3825, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.4125, -0.33, 0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.3625, -0.33, 0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.3825, -0.33, 0.39, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.3625, -0.33, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3825, -0.33, 0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3825, -0.25, 0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.3625, -0.25, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,
    ];

    let prismVertices30 = [
        //Face A
        0.4125, -0.33, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.3825, -0.33, 0.39, 0.8, 0.8, 0.8, 0, 0, -1,
        0.3825, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 0, -1,
        0.4125, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,

        //Face B
        0.4125, -0.33, 0.35, 0.8, 0.8, 0.8, 1, 0, 0,
        0.4125, -0.33, 0.40, 0.8, 0.8, 0.8, 1, 0, 0,
        0.4125, -0.25, 0.40, 0.8, 0.8, 0.8, 1, 0, 0,
        0.4125, -0.25, 0.35, 0.8, 0.8, 0.8, 1, 0, 0,
        
        //Face C
        0.4125, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.3825, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 1, 0,
        0.4125, -0.25, 0.40, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.4125, -0.33, 0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.3825, -0.33, 0.39, 0.8, 0.8, 0.8, 0, -1, 0,
        0.4125, -0.33, 0.40, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.3825, -0.33, 0.39, 0.8, 0.8, 0.8, 0, 0, 1,
        0.4125, -0.33, 0.40, 0.8, 0.8, 0.8, 0, 0, 1,
        0.4125, -0.25, 0.40, 0.8, 0.8, 0.8, 0, 0, 1,
        0.3825, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 0, 1,
    ];

    let prismVertices31 = [
        //Face A
        0.6875, -0.33, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.7375, -0.33, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.7375, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,
        0.6875, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 0, -1,

        //Face B
        0.6875, -0.33, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.7175, -0.33, 0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.7175, -0.25, 0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.25, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        0.6875, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.7375, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.7175, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.6875, -0.33, 0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.7375, -0.33, 0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.7175, -0.33, 0.39, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.7375, -0.33, 0.35, 0.8, 0.8, 0.8, 1, 0, 0,
        0.7175, -0.33, 0.39, 0.8, 0.8, 0.8, 1, 0, 0,
        0.7175, -0.25, 0.39, 0.8, 0.8, 0.8, 1, 0, 0,
        0.7375, -0.25, 0.35, 0.8, 0.8, 0.8, 1, 0, 0,
    ];

    let prismVertices32 = [
        //Face A
        0.6875, -0.33, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.7175, -0.33, 0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.7175, -0.25, 0.39, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.25, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,

        //Face B
        0.6875, -0.33, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.33, 0.40, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.25, 0.40, 0.8, 0.8, 0.8, -1, 0, 0,
        0.6875, -0.25, 0.35, 0.8, 0.8, 0.8, -1, 0, 0,
        
        //Face C
        0.6875, -0.25, 0.35, 0.8, 0.8, 0.8, 0, 1, 0,
        0.7175, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 1, 0,
        0.6875, -0.25, 0.40, 0.8, 0.8, 0.8, 0, 1, 0,

        //Face D
        0.6875, -0.33, 0.35, 0.8, 0.8, 0.8, 0, -1, 0,
        0.7175, -0.33, 0.39, 0.8, 0.8, 0.8, 0, -1, 0,
        0.6875, -0.33, 0.40, 0.8, 0.8, 0.8, 0, -1, 0,

        //Face E
        0.7175, -0.33, 0.39, 0.8, 0.8, 0.8, 0, 0, 1,
        0.6875, -0.33, 0.40, 0.8, 0.8, 0.8, 0, 0, 1,
        0.6875, -0.25, 0.40, 0.8, 0.8, 0.8, 0, 0, 1,
        0.7175, -0.25, 0.39, 0.8, 0.8, 0.8, 0, 0, 1,
    ];

    
    //Prism for rounded box at left object
    let prism = new Prism(prismVertices);
    let prism2 = new Prism(prismVertices2);
    let prism3 = new Prism(prismVertices3);
    let prism4 = new Prism(prismVertices4);
    let prism5 = new Prism(prismVertices5);
    let prism6 = new Prism(prismVertices6);
    let prism7 = new Prism(prismVertices7);
    let prism8 = new Prism(prismVertices8);
    let prism9 = new Prism(prismVertices9);
    let prism10 = new Prism(prismVertices10);
    let prism11 = new Prism(prismVertices11);
    let prism12 = new Prism(prismVertices12);
    let prism13 = new Prism(prismVertices13);
    let prism14 = new Prism(prismVertices14);
    let prism15 = new Prism(prismVertices15);
    let prism16 = new Prism(prismVertices16);
    //Prism for rounded box at right object
    let prism17 = new Prism(prismVertices17);
    let prism18 = new Prism(prismVertices18);
    let prism19 = new Prism(prismVertices19);
    let prism20 = new Prism(prismVertices20);
    let prism21 = new Prism(prismVertices21);
    let prism22 = new Prism(prismVertices22);
    let prism23 = new Prism(prismVertices23);
    let prism24 = new Prism(prismVertices24);
    let prism25 = new Prism(prismVertices25);
    let prism26 = new Prism(prismVertices26);
    let prism27 = new Prism(prismVertices27);
    let prism28 = new Prism(prismVertices28);
    let prism29 = new Prism(prismVertices29);
    let prism30 = new Prism(prismVertices30);
    let prism31 = new Prism(prismVertices31);
    let prism32 = new Prism(prismVertices32);

    //make oval sticker definition
    function makeSticker(sticker, indices, startX, startY, startZ, radius, extraXRadius, extraZRadius){
        for(let i = 0; i <= 50; i++){
            let angle = 2 * Math.PI * i/50;
            let x = startX + Math.cos(angle) * (radius + extraXRadius);
            let z = startZ + Math.sin(angle) * (radius + extraZRadius);
            
            sticker.push(
                x, startY, z, 1, 0.5, 0, 0, 1, 0, //orange - surface orientation to y positive
            );
        }

        for(let i = 1; i <= 49; i++){
            indices.push(0, i, i+1);
        }
    }

    let bodyBox1 = new Box(mainBodyVertices);
    let smallLeftBoxBody1 = new Box(smallLeftBoxBodyVertices);
    let smallRightBoxBody1 = new Box(smallRightBoxBodyVertices);
    let coverBox1 = new Box(mainCoverVertices);
    let smallLeftBoxCover1 = new Box(smallLeftBoxCoverVertices);
    let smallRightBoxCover1 = new Box(smallRightBoxCoverVertices);
    
    let sticker1 = [];
    let indicesSticker1 = [];
    makeSticker(sticker1, indicesSticker1, -0.55, -0.2499, 0, 0.08, 0.1, 0);
    
    let sticker2 = [];
    let indicesSticker2 = [];
    makeSticker(sticker2, indicesSticker2, 0.55, -0.2499, 0, 0.08, 0, 0.1);
    
    let leftJar = [
        bodyBox1, smallLeftBoxBody1, smallRightBoxBody1, 
        prism, prism2, prism3, prism4, prism5, prism6, prism7, prism8,
        coverBox1, smallLeftBoxCover1, smallRightBoxCover1,
        prism9, prism10, prism11, prism12, prism13, prism14, prism15, prism16
    ];



    let bodyBox2 = new Box(mainBodyVertices2);
    let smallLeftBoxBody2 = new Box(smallLeftBoxBodyVertices2);
    let smallRightBoxBody2 = new Box(smallRightBoxBodyVertices2);
    
    let coverBox2 = new Box(mainCoverVertices2);
    let smallLeftBoxCover2 = new Box(smallLeftBoxCoverVertices2);
    let smallRightBoxCover2 = new Box(smallRightBoxCoverVertices2);
    
    let rightJar = [
        bodyBox2, smallLeftBoxBody2, smallRightBoxBody2, 
        prism17, prism18, prism19, prism20, prism21, prism22, prism23, prism24,
        coverBox2, smallLeftBoxCover2, smallRightBoxCover2,
        prism25, prism26, prism27, prism28, prism29, prism30, prism31, prism32
    ];

    
    let cube = new Box(cube_vertices);

    //plane color is #152152 in hex
    //convert to RGB in decimal (21,33,82)
    //divide with RGB with 255 
    //surface orientation to y-positive
    let plane_vertices = [
        -10, -0.50, 10,  21/255, 33/255, 82/355, 0, 1, 0,
        10, -0.50, 10, 21/255, 33/255, 82/355, 0, 1, 0,
        10, -0.50, -10, 21/255, 33/255, 82/355, 0, 1, 0,
        -10, -0.50, -10, 21/255, 33/255, 82/355, 0, 1, 0,
    ]

    let plane = new Rectangle(plane_vertices);


    let vertexShaderSource = `
        attribute vec3 aPosition; 
        attribute vec3 aColor;
        attribute vec3 aNormal;
        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        uniform mat4 uModel;
        uniform mat4 uView;
        uniform mat4 uProjection;
        
        void main(){
            gl_Position = uProjection * uView * uModel * vec4(aPosition, 1.0);
            vColor = aColor;
            vNormal = aNormal;
            vPosition = (uModel * vec4(aPosition, 1.0)).xyz;
        }
    `;

    let fragmentShaderSource = `
        precision mediump float;
        varying vec3 vColor;
        varying vec3 vNormal;
        varying vec3 vPosition;
        uniform vec3 uLightConstant;
        uniform float uAmbientIntensity;
        // uniform vec3 uLightDirection;
        uniform vec3 uLightPosition;
        uniform mat3 uNormalModel;
        uniform vec3 uViewerPosition;
        uniform float uShininessConstant;
        uniform float uLightOn;
        void main(){
            vec3 ambient = uLightConstant * uAmbientIntensity;
            vec3 lightDirection = uLightPosition - vPosition;
            vec3 normalizedLight = normalize(lightDirection);
            vec3 normalizedNormal = normalize(uNormalModel * vNormal);
            float cosTheta = dot(normalizedNormal, normalizedLight);
            vec3 diffuse = vec3(0.0, 0.0, 0.0);
            if (cosTheta > 0.0){
                float diffuseIntensity = cosTheta;
                diffuse = uLightConstant * diffuseIntensity;
            }
            vec3 reflector = reflect(-lightDirection, normalizedNormal);
            vec3 normalizedReflector = normalize(reflector);
            vec3 normalizedViewer = normalize(uViewerPosition - vPosition);
            float cosPhi = dot(normalizedReflector, normalizedViewer);
            vec3 specular = vec3(0.0, 0.0, 0.0);
            if (cosPhi > 0.0){
                float specularIntensity = pow(cosPhi , uShininessConstant);
                specular = uLightConstant * specularIntensity;
            }
            vec3 phong = ambient + (uLightOn * diffuse) + (uLightOn * specular);
            gl_FragColor = vec4(phong * vColor, 1.0);
        }
    `;


    let vertexShader = utils.getShader(gl.VERTEX_SHADER, vertexShaderSource);
    let fragmentShader = utils.getShader(gl.FRAGMENT_SHADER, fragmentShaderSource);

    let program = utils.createProgram(vertexShader,fragmentShader);
    gl.useProgram(program);  

    let uModel = gl.getUniformLocation(program, "uModel");
    let uView = gl.getUniformLocation(program, "uView");
    let uProjection = gl.getUniformLocation(program, "uProjection");

    let projection = glMatrix.mat4.create();
    glMatrix.mat4.perspective(
        projection,
        Math.PI / 3,
        1,
        0.5,
        10
    );
    gl.uniformMatrix4fv(uProjection, false, projection);

    let view = glMatrix.mat4.create();
    let camera = [0,0,2]; //camera position
    let cameraLookAt = [0,0,0];
    glMatrix.mat4.lookAt(
        view,
        camera,
        cameraLookAt,    //the point where camera looks at
        [0,1,0]     //up vector of the camera
    );
    gl.uniformMatrix4fv(uView, false, view);

    let isLightOn = true;

    
    let changeCube = [0, 0, 0];
    let cameraAngle = 0;
    let cameraRotateSpeed = 180/152;
    
    function onKeyDown(event){
        if(event.keyCode == 32){//space
            isLightOn = !isLightOn;
        }else if(event.keyCode == 87){//W
            changeCube[2] = changeCube[2] - 0.152;
        }else if(event.keyCode == 83){//S
            changeCube[2] = changeCube[2] + 0.152;
        }else if(event.keyCode == 65){//A
            changeCube[0] = changeCube[0] - 0.152;
        }else if(event.keyCode == 68){//D
            changeCube[0] = changeCube[0] + 0.152;
        }else if(event.keyCode == 38){ //Arrow Up
            let nextX = 0.0152 * Math.sin(glMatrix.glMatrix.toRadian(-cameraAngle));
            let nextZ = 0.0152 * Math.cos(glMatrix.glMatrix.toRadian(-cameraAngle)); 
            camera[0] += nextX;
            camera[2] -= nextZ;
           
            glMatrix.mat4.lookAt(
                view,
                camera,
                cameraLookAt,    //the point where camera looks at
                [0,1,0]     //up vector of the camera
            );
            gl.uniformMatrix4fv(uView, false, view);
        }else if(event.keyCode == 40){ //Arrow Down
            let nextX = 0.0152 * Math.sin(glMatrix.glMatrix.toRadian(-cameraAngle));
            let nextZ = 0.0152 * Math.cos(glMatrix.glMatrix.toRadian(-cameraAngle)); 
            camera[0] -= nextX;
            camera[2] += nextZ;

            glMatrix.mat4.lookAt(
                view,
                camera,
                cameraLookAt,    //the point where camera looks at
                [0,1,0]     //up vector of the camera
            );
            gl.uniformMatrix4fv(uView, false, view);
        }else if(event.keyCode == 37){ //Arrow Left
            cameraAngle -= cameraRotateSpeed;
            glMatrix.vec3.rotateY(camera, camera, cameraLookAt, glMatrix.glMatrix.toRadian(-cameraRotateSpeed)); //The rotation origin is set to cameraLookAt (0,0,0)
            glMatrix.mat4.lookAt(
                view,
                camera,
                cameraLookAt,    //the point where camera looks at
                [0,1,0]     //up vector of the camera
            );
            gl.uniformMatrix4fv(uView, false, view);
        }else if(event.keyCode == 39){ //Arrow Right
            cameraAngle += cameraRotateSpeed;
            glMatrix.vec3.rotateY(camera, camera, cameraLookAt, glMatrix.glMatrix.toRadian(cameraRotateSpeed)); //The rotation origin is set to cameraLookAt (0,0,0)
            glMatrix.mat4.lookAt(
                view,
                camera,
                cameraLookAt,    //the point where camera looks at
                [0,1,0]     //up vector of the camera
            );
            gl.uniformMatrix4fv(uView, false, view);
        }
    }

    let lastPointOnTrackBall, currentPointOnTrackBall;
    let lastQuat = glMatrix.quat.create();
    function computeCurrentQuat() {
        // Secara berkala hitung quaternion rotasi setiap ada perubahan posisi titik pointer mouse
        let axisFromCrossProduct = glMatrix.vec3.cross(glMatrix.vec3.create(), lastPointOnTrackBall, currentPointOnTrackBall);
        let angleFromDotProduct = Math.acos(glMatrix.vec3.dot(lastPointOnTrackBall, currentPointOnTrackBall));
        let rotationQuat = glMatrix.quat.setAxisAngle(glMatrix.quat.create(), axisFromCrossProduct, angleFromDotProduct);
        glMatrix.quat.normalize(rotationQuat, rotationQuat);
        return glMatrix.quat.multiply(glMatrix.quat.create(), rotationQuat, lastQuat);
    }
    // Memproyeksikan pointer mouse agar jatuh ke permukaan ke virtual trackball
    function getProjectionPointOnSurface(point) {
        let radius = canvas.width/3;  // Jari-jari virtual trackball kita tentukan sebesar 1/3 lebar kanvas
        let center = glMatrix.vec3.fromValues(canvas.width/2, canvas.height/2, 0);  // Titik tengah virtual trackball
        let pointVector = glMatrix.vec3.subtract(glMatrix.vec3.create(), point, center);
        pointVector[1] = pointVector[1] * (-1); // Flip nilai y, karena koordinat piksel makin ke bawah makin besar
        let radius2 = radius * radius;
        let length2 = pointVector[0] * pointVector[0] + pointVector[1] * pointVector[1];
        if (length2 <= radius2) pointVector[2] = Math.sqrt(radius2 - length2); // Dapatkan nilai z melalui rumus Pytagoras
        else {  // Atur nilai z sebagai 0, lalu x dan y sebagai paduan Pytagoras yang membentuk sisi miring sepanjang radius
            pointVector[0] *= radius / Math.sqrt(length2);
            pointVector[1] *= radius / Math.sqrt(length2);
            pointVector[2] = 0;
        }
        return glMatrix.vec3.normalize(glMatrix.vec3.create(), pointVector);
    }

    let dragging, rotation = glMatrix.mat4.create();
    function onMouseDown(event) {
        let x = event.clientX;
        let y = event.clientY;
        let rect = event.target.getBoundingClientRect();
        if (
            rect.left <= x &&
            rect.right >= x &&
            rect.top <= y &&
            rect.bottom >= y
        ) {
            dragging = true;
        }
        lastPointOnTrackBall = getProjectionPointOnSurface(glMatrix.vec3.fromValues(x, y, 0));
        currentPointOnTrackBall = lastPointOnTrackBall;
    }
    function onMouseUp(event) {
        dragging = false;
        if (currentPointOnTrackBall != lastPointOnTrackBall) {
            lastQuat = computeCurrentQuat();
        }
    }
    function onMouseMove(event) {
        if (dragging) {
            let x = event.clientX;
            let y = event.clientY;
            currentPointOnTrackBall = getProjectionPointOnSurface(glMatrix.vec3.fromValues(x, y, 0));
            glMatrix.mat4.fromQuat(rotation, computeCurrentQuat());
        }
    }

    document.addEventListener("keydown",onKeyDown,false);
    document.addEventListener("mousedown", onMouseDown, false);
    document.addEventListener("mouseup", onMouseUp, false);
    document.addEventListener("mousemove", onMouseMove, false);

    let uLightOn = gl.getUniformLocation(program, "uLightOn");
    function render(){
        if(isLightOn){
            gl.uniform1f(uLightOn, 1); 
        }else{
            gl.uniform1f(uLightOn, 0); 
        }
        let model1 = glMatrix.mat4.create(); //for cube
        let model2 = glMatrix.mat4.create(); //for left jar
        let model3 = glMatrix.mat4.create(); //for right jar
        let model4 = glMatrix.mat4.create(); //for plane

        glMatrix.mat4.multiply(model1, model1, rotation);
        glMatrix.mat4.translate(model1, model1, changeCube);

        //find cube position for now
        let cubeLocationNow = glMatrix.vec4.create();
        glMatrix.mat4.multiply(cubeLocationNow, model1, [0, 0, 0, 1]);
        let cubeXYZ = [cubeLocationNow[0], cubeLocationNow[1], cubeLocationNow[2]];


        let uLightConstant = gl.getUniformLocation(program, "uLightConstant");
        let uAmbientIntensity = gl.getUniformLocation(program, "uAmbientIntensity");
        let uLightPosition = gl.getUniformLocation(program, "uLightPosition");           
        var uViewerPosition = gl.getUniformLocation(program, "uViewerPosition");
        let uShininessConstant = gl.getUniformLocation(program, "uShininessConstant");
        
        gl.uniform3fv(uViewerPosition, camera);

        let uNormalModel = gl.getUniformLocation(program, "uNormalModel");

        let normalModel1 = glMatrix.mat3.create();
        glMatrix.mat3.normalFromMat4(normalModel1, model1);
        gl.uniformMatrix3fv(uNormalModel, false, normalModel1);

        gl.uniformMatrix4fv(uModel, false, model1);
        
        gl.enable(gl.DEPTH_TEST);
        gl.depthFunc(gl.LEQUAL);
        gl.clearColor(0.6, 0.8, 0.7, 1.0);
        gl.clearDepth(1.0);

        gl.viewport(0.0, 0.0, canvas.width, canvas.height);
        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);

        gl.uniform3fv(uLightConstant, [1.0, 1.0, 1.0]); //white
        if(isLightOn){
            gl.uniform1f(uAmbientIntensity, 1);
        }else{
            gl.uniform1f(uAmbientIntensity, 0.352);
        }
        gl.uniform1f(uShininessConstant, 10); 
        gl.uniform3fv(uLightPosition, cubeXYZ);
        utils.arrayBindBuffer(gl.ARRAY_BUFFER, Float32Array, cube.vertices, gl.STATIC_DRAW);
        utils.arrayBindBuffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array, cube.indices, gl.STATIC_DRAW);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aPosition", 9 * Float32Array.BYTES_PER_ELEMENT, 0);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aColor", 9 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aNormal", 9 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);
        gl.drawElements(gl.TRIANGLES, cube.indices.length, gl.UNSIGNED_SHORT, 0);


        gl.uniform3fv(uLightConstant, [1.0, 1.0, 1.0]);
        gl.uniform1f(uAmbientIntensity, 0.352); // ambient intensity 0.352 (152 + 200 =352)
        gl.uniform1f(uShininessConstant, 10); //plastic specular effect for left object
        gl.uniform3fv(uLightPosition, cubeXYZ); 

        let normalModel2 = glMatrix.mat3.create();
        glMatrix.mat3.normalFromMat4(normalModel2, model2);
        gl.uniformMatrix3fv(uNormalModel, false, normalModel2);

        gl.uniformMatrix4fv(uModel, false, model2);

        leftJar.forEach(box => {
            utils.arrayBindBuffer(gl.ARRAY_BUFFER, Float32Array, box.vertices, gl.STATIC_DRAW);
            utils.arrayBindBuffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array, box.indices, gl.STATIC_DRAW);
            utils.arrayInterpretation(program, 3, gl.FLOAT, "aPosition", 9 * Float32Array.BYTES_PER_ELEMENT, 0);
            utils.arrayInterpretation(program, 3, gl.FLOAT, "aColor", 9 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);
            utils.arrayInterpretation(program, 3, gl.FLOAT, "aNormal", 9 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);
            gl.drawElements(gl.TRIANGLES, box.indices.length, gl.UNSIGNED_SHORT, 0);
        });

        utils.arrayBindBuffer(gl.ARRAY_BUFFER, Float32Array, sticker1, gl.STATIC_DRAW);
        utils.arrayBindBuffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array, indicesSticker1, gl.STATIC_DRAW);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aPosition", 9 * Float32Array.BYTES_PER_ELEMENT, 0);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aColor", 9 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aNormal", 9 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);
        gl.drawElements(gl.TRIANGLES, indicesSticker1.length, gl.UNSIGNED_SHORT, 0);

        gl.uniform3fv(uLightConstant, [1.0, 1.0, 1.0]);
        gl.uniform1f(uAmbientIntensity, 0.352); //ambient intensity 0.352 (152 + 200 =352)
        gl.uniform1f(uShininessConstant, 200); //metal specular effect for right object
        gl.uniform3fv(uLightPosition, cubeXYZ);

        let normalModel3 = glMatrix.mat3.create();
        glMatrix.mat3.normalFromMat4(normalModel3, model3);
        gl.uniformMatrix3fv(uNormalModel, false, normalModel3);

        gl.uniformMatrix4fv(uModel, false, model3);

        rightJar.forEach(data => {
            utils.arrayBindBuffer(gl.ARRAY_BUFFER, Float32Array, data.vertices, gl.STATIC_DRAW);
            utils.arrayBindBuffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array, data.indices, gl.STATIC_DRAW);
            utils.arrayInterpretation(program, 3, gl.FLOAT, "aPosition", 9 * Float32Array.BYTES_PER_ELEMENT, 0);
            utils.arrayInterpretation(program, 3, gl.FLOAT, "aColor", 9 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);
            utils.arrayInterpretation(program, 3, gl.FLOAT, "aNormal", 9 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);
            gl.drawElements(gl.TRIANGLES, data.indices.length, gl.UNSIGNED_SHORT, 0);
        });

        utils.arrayBindBuffer(gl.ARRAY_BUFFER, Float32Array, sticker2, gl.STATIC_DRAW);
        utils.arrayBindBuffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array, indicesSticker2, gl.STATIC_DRAW);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aPosition", 9 * Float32Array.BYTES_PER_ELEMENT, 0);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aColor", 9 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aNormal", 9 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);
        gl.drawElements(gl.TRIANGLES, indicesSticker2.length, gl.UNSIGNED_SHORT, 0);

        let normalModel4 = glMatrix.mat3.create();
        glMatrix.mat3.normalFromMat4(normalModel4, model4);
        gl.uniformMatrix3fv(uNormalModel, false, normalModel4);

        gl.uniformMatrix4fv(uModel, false, model4);

        gl.uniform3fv(uLightConstant, [1.0, 1.0, 1.0]); //white
        gl.uniform1f(uAmbientIntensity, 1);
        gl.uniform1f(uShininessConstant, 10); 
        gl.uniform3fv(uLightPosition, cubeXYZ);
        utils.arrayBindBuffer(gl.ARRAY_BUFFER, Float32Array, plane.vertices, gl.STATIC_DRAW);
        utils.arrayBindBuffer(gl.ELEMENT_ARRAY_BUFFER, Uint16Array, plane.indices, gl.STATIC_DRAW);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aPosition", 9 * Float32Array.BYTES_PER_ELEMENT, 0);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aColor", 9 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);
        utils.arrayInterpretation(program, 3, gl.FLOAT, "aNormal", 9 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);
        gl.drawElements(gl.TRIANGLES, plane.indices.length, gl.UNSIGNED_SHORT, 0);

        requestAnimationFrame(render);
    }
    render();
}
